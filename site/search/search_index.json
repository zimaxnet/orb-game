{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udfae Orb Game Documentation","text":"<p>Welcome to the official documentation for Orb Game - an advanced AI-powered interactive gaming platform that combines time travel, positive news discovery, and multimodal AI technology.</p>"},{"location":"#documentation-structure","title":"\ud83d\udcda Documentation Structure","text":""},{"location":"#getting-started","title":"\ud83c\udfaf Getting Started","text":"<ul> <li>Introduction to Orb Game</li> <li>Quick Start Guide</li> <li>Installation &amp; Setup</li> </ul>"},{"location":"#gameplay-guide","title":"\ud83c\udfae Gameplay Guide","text":"<ul> <li>How to Play</li> <li>Categories &amp; Epochs</li> <li>Historical Figures</li> <li>Audio &amp; Accessibility</li> </ul>"},{"location":"#developer-documentation","title":"\ud83c\udfd7\ufe0f Developer Documentation","text":"<ul> <li>Architecture Overview</li> <li>API Reference</li> <li>Deployment Guide</li> <li>Contributing Guidelines</li> </ul>"},{"location":"#ai-integration","title":"\ud83e\udd16 AI Integration","text":"<ul> <li>AI Models Overview</li> <li>Prompt Management</li> <li>Story Generation</li> <li>TTS Integration</li> </ul>"},{"location":"#database-caching","title":"\ud83d\uddc4\ufe0f Database &amp; Caching","text":"<ul> <li>MongoDB Integration</li> <li>Cache System</li> <li>Story Prepopulation</li> </ul>"},{"location":"#deployment-devops","title":"\ud83d\ude80 Deployment &amp; DevOps","text":"<ul> <li>Azure Resources</li> <li>GitHub Actions</li> <li>Monitoring &amp; Logs</li> </ul>"},{"location":"#performance-optimization","title":"\ud83d\udcca Performance &amp; Optimization","text":"<ul> <li>Performance Metrics</li> <li>Caching Strategy</li> <li>Cost Optimization</li> </ul>"},{"location":"#quick-links","title":"\ud83d\ude80 Quick Links","text":"<ul> <li>Live Game: https://orbgame.us</li> <li>API Endpoint: https://api.orbgame.us</li> <li>GitHub Repository: https://github.com/zimaxnet/orb-game</li> <li>Azure Portal: https://portal.azure.com</li> </ul>"},{"location":"#technology-stack","title":"\ud83d\udd27 Technology Stack","text":""},{"location":"#frontend","title":"Frontend","text":"<ul> <li>React 19.x with Vite build system</li> <li>Three.js for 3D graphics and animations</li> <li>@react-three/fiber and @react-three/drei for React 3D integration</li> <li>CSS Modules for component-specific styling</li> </ul>"},{"location":"#backend","title":"Backend","text":"<ul> <li>Node.js with Express server</li> <li>Azure OpenAI integration (o4-mini model)</li> <li>Azure Cosmos DB for MongoDB</li> <li>Azure Key Vault for secure credential management</li> </ul>"},{"location":"#deployment","title":"Deployment","text":"<ul> <li>Azure Web App for frontend hosting</li> <li>Azure Container Apps for backend services</li> <li>Azure Container Registry for Docker images</li> <li>GitHub Actions for CI/CD automation</li> </ul>"},{"location":"#current-status","title":"\ud83d\udcc8 Current Status","text":"<ul> <li>\u2705 Frontend: Live at https://orbgame.us</li> <li>\u2705 Backend: Live at https://api.orbgame.us</li> <li>\u2705 Database: 240+ historical figure stories pre-populated</li> <li>\u2705 AI Integration: o4-mini model with TTS support</li> <li>\u2705 Deployment: Automated CI/CD pipeline</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>We welcome contributions! Please see our Contributing Guidelines for details on how to:</p> <ul> <li>Report bugs and issues</li> <li>Submit feature requests</li> <li>Contribute code improvements</li> <li>Update documentation</li> </ul>"},{"location":"#support","title":"\ud83d\udcde Support","text":"<ul> <li>GitHub Issues: Report bugs and feature requests</li> <li>Documentation Issues: Report documentation problems</li> <li>Email: contact@zimax.net</li> </ul> <p>Last Updated: December 2024 Version: 1.0.0 Maintained by: Zimax AI Labs </p>"},{"location":"enterprise-spec/","title":"AIMCS Enterprise Technical Specification","text":""},{"location":"enterprise-spec/#1-overview","title":"1. Overview","text":"<p>Brief summary of the enterprise goals and guiding principles.</p>"},{"location":"enterprise-spec/#2-multi-tenant-database-design","title":"2. Multi-Tenant Database Design","text":"<ul> <li>Tenant isolation strategy (Cosmos DB schema, partitioning)</li> <li>Data model diagrams</li> <li>Access patterns</li> </ul>"},{"location":"enterprise-spec/#3-authentication-authorization","title":"3. Authentication &amp; Authorization","text":"<ul> <li>Azure AD B2C integration plan (frontend &amp; backend)</li> <li>User roles and RBAC matrix</li> <li>Token validation and session management</li> </ul>"},{"location":"enterprise-spec/#4-environment-planning","title":"4. Environment Planning","text":"<ul> <li>Staging vs. production separation</li> <li>Environment variables and secrets management</li> <li>Deployment pipeline considerations</li> </ul>"},{"location":"enterprise-spec/#5-api-expansion","title":"5. API Expansion","text":"<ul> <li>New endpoints and route structure</li> <li>Backward compatibility with /api/chat</li> <li>Example request/response payloads</li> </ul>"},{"location":"enterprise-spec/#6-security-compliance","title":"6. Security &amp; Compliance","text":"<ul> <li>Security audit findings</li> <li>RBAC implementation details</li> <li>Audit logging requirements</li> <li>Data privacy and compliance notes</li> </ul>"},{"location":"enterprise-spec/#7-azure-resource-planning","title":"7. Azure Resource Planning","text":"<ul> <li>List of required Azure services (Cosmos DB, AD B2C, etc.)</li> <li>Cost estimates and scaling considerations</li> <li>Resource provisioning steps</li> </ul>"},{"location":"enterprise-spec/#8-migration-plan","title":"8. Migration Plan","text":"<ul> <li>Steps to migrate from stateless to persistent (Cosmos DB)</li> <li>Data migration scripts/strategy</li> <li>Rollback and testing plan</li> </ul>"},{"location":"enterprise-spec/#9-milestones-timeline","title":"9. Milestones &amp; Timeline","text":"<ul> <li>Key deliverables and deadlines</li> <li>Progress tracking checklist</li> </ul> <p>This document is a living specification. Update as research and planning progress. </p>"},{"location":"developer/architecture/","title":"Architecture Overview","text":""},{"location":"developer/architecture/#system-architecture","title":"\ud83c\udfd7\ufe0f System Architecture","text":""},{"location":"developer/architecture/#frontend-architecture","title":"Frontend Architecture","text":"<ul> <li>React 19.x with modern hooks</li> <li>Three.js for 3D graphics</li> <li>Vite for build system</li> <li>CSS Modules for styling</li> </ul>"},{"location":"developer/architecture/#backend-architecture","title":"Backend Architecture","text":"<ul> <li>Node.js with Express</li> <li>Azure OpenAI integration</li> <li>Azure Cosmos DB for storage</li> <li>Azure Key Vault for secrets</li> </ul>"},{"location":"developer/architecture/#deployment-architecture","title":"Deployment Architecture","text":"<ul> <li>Azure Web App for frontend</li> <li>Azure Container Apps for backend</li> <li>GitHub Actions for CI/CD</li> </ul> <p>Detailed architecture documentation coming soon...</p>"},{"location":"developer/cursor-rules/","title":"Cursor Rules","text":"<p>This document contains the development rules and guidelines for the Orb Game project.</p>"},{"location":"developer/cursor-rules/#orb-game-cursor-rules","title":"Orb Game - Cursor Rules","text":""},{"location":"developer/cursor-rules/#project-overview","title":"\ud83c\udfae Project Overview","text":"<p>Orb Game is an advanced AI-powered interactive gaming platform that combines time travel, positive news discovery, and multimodal AI technology. The system features a React frontend with 3D Three.js graphics, a Node.js backend with multiple AI model integrations, and comprehensive Azure cloud deployment.</p>"},{"location":"developer/cursor-rules/#architecture-patterns","title":"\ud83c\udfd7\ufe0f Architecture Patterns","text":""},{"location":"developer/cursor-rules/#frontend-react-vite","title":"Frontend (React + Vite)","text":"<ul> <li>Main Component: <code>components/OrbGame.jsx</code> - 3D interactive gaming experience</li> <li>State Management: React hooks with context providers (<code>contexts/LanguageContext.jsx</code>)</li> <li>3D Graphics: Three.js with @react-three/fiber and @react-three/drei</li> <li>Build System: Vite with React 19.x support</li> <li>Styling: CSS modules with component-specific stylesheets</li> </ul>"},{"location":"developer/cursor-rules/#backend-nodejs-express","title":"Backend (Node.js + Express)","text":"<ul> <li>Main Server: <code>backend/backend-server.js</code> - Production API server</li> <li>Services: Modular service architecture (MemoryService, PositiveNewsService, StoryCacheService)</li> <li>AI Integration: Multiple AI models (Grok 4, Perplexity Sonar, Gemini 1.5 Flash, O4-Mini)</li> <li>Database: Azure Cosmos DB for MongoDB with caching system</li> <li>Security: Azure Key Vault for API key management</li> </ul>"},{"location":"developer/cursor-rules/#deployment-azure","title":"Deployment (Azure)","text":"<ul> <li>Frontend: Azure Web App with GitHub Actions CI/CD</li> <li>Backend: Azure Container Apps with auto-scaling</li> <li>Registry: Azure Container Registry (<code>orbgameregistry</code>)</li> <li>Secrets: Azure Key Vault with RBAC authentication</li> </ul>"},{"location":"developer/cursor-rules/#development-guidelines","title":"\ud83d\udd27 Development Guidelines","text":""},{"location":"developer/cursor-rules/#file-structure","title":"File Structure","text":"<pre><code>orb-game/\n\u251c\u2500\u2500 components/          # React components\n\u251c\u2500\u2500 contexts/           # React context providers\n\u251c\u2500\u2500 utils/              # Utility functions (promptManager)\n\u251c\u2500\u2500 api/                # API client functions\n\u251c\u2500\u2500 backend/            # Node.js backend server\n\u251c\u2500\u2500 scripts/            # Deployment and utility scripts\n\u251c\u2500\u2500 public/             # Static assets\n\u2514\u2500\u2500 docs/               # Documentation\n</code></pre>"},{"location":"developer/cursor-rules/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>Components: PascalCase (e.g., <code>OrbGame.jsx</code>)</li> <li>Files: kebab-case for scripts, camelCase for modules</li> <li>Variables: camelCase</li> <li>Constants: UPPER_SNAKE_CASE</li> <li>Functions: camelCase</li> <li>Classes: PascalCase</li> </ul>"},{"location":"developer/cursor-rules/#code-style","title":"Code Style","text":"<ul> <li>JavaScript: ES6+ modules with import/export</li> <li>React: Functional components with hooks</li> <li>CSS: Component-specific stylesheets</li> <li>Backend: Async/await with proper error handling</li> <li>Comments: JSDoc style for functions and classes</li> </ul>"},{"location":"developer/cursor-rules/#ai-model-integration","title":"\ud83e\udd16 AI Model Integration","text":""},{"location":"developer/cursor-rules/#supported-ai-models","title":"Supported AI Models","text":"<ol> <li>Grok 4 - Advanced reasoning and creative storytelling</li> <li>Perplexity Sonar - Real-time web search and synthesis</li> <li>Gemini 1.5 Flash - Fast and creative content generation</li> <li>O4-Mini - Efficient and reliable processing</li> </ol>"},{"location":"developer/cursor-rules/#ai-model-parameters","title":"AI Model Parameters","text":"<ul> <li>O4-Mini: Use <code>max_completion_tokens</code> (not <code>max_tokens</code>), no <code>temperature</code> parameter</li> <li>TTS Models: Use <code>Authorization: Bearer</code> header (not <code>api-key</code>)</li> <li>Token Limits: 2000 tokens for complete JSON responses</li> <li>TTS Voices: Use <code>alloy</code> voice for both English and Spanish (avoid <code>jorge</code> - not supported)</li> </ul>"},{"location":"developer/cursor-rules/#azure-openai-configuration","title":"Azure OpenAI Configuration","text":"<ul> <li>Endpoint: <code>https://aimcs-foundry.cognitiveservices.azure.com/</code></li> <li>API Version: <code>2024-12-01-preview</code> (required for o4-mini model)</li> <li>Model: <code>o4-mini</code></li> <li>Deployment: <code>o4-mini</code></li> <li>Parameter: Use <code>max_completion_tokens</code> instead of <code>max_tokens</code></li> <li>Example Python Configuration:   <pre><code>from openai import AzureOpenAI\n\nclient = AzureOpenAI(\n    api_version=\"2024-12-01-preview\",\n    azure_endpoint=\"https://aimcs-foundry.cognitiveservices.azure.com/\",\n    api_key=\"your-api-key\",\n)\n\nresponse = client.chat.completions.create(\n    messages=[{\"role\": \"user\", \"content\": \"Hello\"}],\n    max_completion_tokens=1000,\n    model=\"o4-mini\"\n)\n</code></pre></li> </ul>"},{"location":"developer/cursor-rules/#adding-new-ai-models","title":"Adding New AI Models","text":"<ol> <li>Store API key in Azure Key Vault</li> <li>Add model function to <code>backend-server.js</code></li> <li>Update frontend model selection in <code>OrbGame.jsx</code></li> <li>Add prompts to <code>utils/promptReferenceData.js</code></li> <li>Test with <code>scripts/test-ai-models.js</code></li> </ol>"},{"location":"developer/cursor-rules/#story-prepopulation-system","title":"Story Prepopulation System","text":"<ul> <li>Script: <code>scripts/prepopulate-all-stories.js</code> - Generates 240+ historical figure stories</li> <li>Missing Stories Script: <code>scripts/generate-missing-stories.js</code> - Generates only missing stories (token efficient)</li> <li>Key Vault Integration: Automatically fetches credentials from <code>orb-game-kv-eastus2</code></li> <li>Data Sources: <code>EpochalCategoryStoryMap.md</code> and <code>OrbGameInfluentialPeopleSeeds</code></li> <li>Execution: <code>./scripts/run-prepopulation.sh</code> - Interactive script with confirmation</li> <li>Coverage: 8 categories \u00d7 5 epochs \u00d7 2 languages \u00d7 3 figures = 240 stories</li> <li>TTS Integration: Generates audio for each story using Azure OpenAI TTS (<code>alloy</code> voice)</li> <li>MongoDB Storage: Stores stories with TTL for automatic cleanup</li> <li>Error Tracking: Comprehensive error statistics for JSON parse, TTS, API, MongoDB, and network errors</li> </ul>"},{"location":"developer/cursor-rules/#prompt-management-system","title":"\ud83c\udfaf Prompt Management System","text":""},{"location":"developer/cursor-rules/#centralized-prompt-system","title":"Centralized Prompt System","text":"<ul> <li>Source: <code>PROMPTS_REFERENCE.md</code> - Single source of truth</li> <li>Manager: <code>utils/promptManager.js</code> - Dynamic prompt generation</li> <li>Data: <code>utils/promptReferenceData.js</code> - Structured prompt data</li> <li>Categories: Technology, Science, Art, Nature, Sports, Music, Space, Innovation</li> <li>Epochs: Ancient, Medieval, Industrial, Modern, Future</li> <li>Languages: English and Spanish with cultural sensitivity</li> </ul>"},{"location":"developer/cursor-rules/#prompt-structure","title":"Prompt Structure","text":"<pre><code>// Model-specific prompts with category, epoch, language support\nconst prompt = promptManager.getFrontendPrompt(category, epoch, language, model);\n</code></pre>"},{"location":"developer/cursor-rules/#internationalization","title":"\ud83c\udf0d Internationalization","text":""},{"location":"developer/cursor-rules/#language-support","title":"Language Support","text":"<ul> <li>Primary: English (<code>en</code>)</li> <li>Secondary: Spanish (<code>es</code>)</li> <li>Context: <code>contexts/LanguageContext.jsx</code></li> <li>TTS Voices: <code>alloy</code> (English), <code>jorge</code> (Spanish)</li> <li>Caching: Language-specific story and audio caching</li> </ul>"},{"location":"developer/cursor-rules/#translation-guidelines","title":"Translation Guidelines","text":"<ul> <li>Use <code>useLanguage()</code> hook for language context</li> <li>Cache stories separately by language</li> <li>Provide culturally appropriate content</li> <li>Support language switching with story refresh</li> </ul>"},{"location":"developer/cursor-rules/#database-caching","title":"\ud83d\uddc4\ufe0f Database &amp; Caching","text":""},{"location":"developer/cursor-rules/#mongodb-integration","title":"MongoDB Integration","text":"<ul> <li>Connection: Azure Cosmos DB for MongoDB (<code>orb-game-mongodb-eastus2</code>)</li> <li>Collections: Stories, memories, analytics</li> <li>Throughput: 2000 RU/s per collection (stories, positive_news_stories, audio, users, connection_test)</li> <li>Performance: 5x throughput increase from 400 RU/s baseline</li> <li>Caching: 88.2% performance improvement for cached requests</li> <li>TTL: 30-day expiration for cached content</li> <li>Cost: ~$0.008/hour per collection at 2000 RU/s</li> </ul>"},{"location":"developer/cursor-rules/#cache-management","title":"Cache Management","text":"<pre><code>// Check cache before generating new content\nconst cachedStories = await storyCacheService.getStories(category, epoch, model, language);\nif (cachedStories.length &gt; 0) {\n  return cachedStories;\n}\n</code></pre>"},{"location":"developer/cursor-rules/#deployment-patterns","title":"\ud83d\ude80 Deployment Patterns","text":""},{"location":"developer/cursor-rules/#azure-resources","title":"Azure Resources","text":"<ul> <li>Resource Group: <code>orb-game-rg-eastus2</code></li> <li>Frontend: Azure Web App (<code>orb-game</code>) - Live at https://orbgame.us</li> <li>Backend: Azure Container Apps (<code>orb-game-backend-eastus2</code>)</li> <li>Registry: Azure Container Registry (<code>orbgameregistry</code>)</li> <li>Key Vault: <code>orb-game-kv-eastus2</code></li> </ul>"},{"location":"developer/cursor-rules/#deployment-automation","title":"Deployment Automation","text":"<ul> <li>GitHub Actions: Automatic deployment on push to main branch</li> <li>Frontend: <code>.github/workflows/deploy-frontend.yml</code> - Auto-deploys on any push</li> <li>Backend: <code>.github/workflows/deploy-backend.yml</code> - Deploys on backend changes</li> <li>Full Deployment: <code>.github/workflows/deploy-full.yml</code> - Complete CI/CD pipeline</li> <li>Local Deployment: Manual deployment scripts for development</li> <li>Frontend: <code>scripts/deploy-azure.sh</code> - Build and deploy frontend</li> <li>Backend: <code>scripts/build-backend.sh</code> - Build and push backend container</li> <li>Full: <code>scripts/deploy-full.sh</code> - Complete local deployment</li> </ul>"},{"location":"developer/cursor-rules/#efficient-rebuild-redeployment-procedures","title":"Efficient Rebuild &amp; Redeployment Procedures","text":""},{"location":"developer/cursor-rules/#quick-local-deployment-development","title":"Quick Local Deployment (Development)","text":"<pre><code># Frontend only (fastest)\nnpm run build\ncd dist &amp;&amp; zip -r ../deploy.zip . &amp;&amp; cd ..\naz webapp deploy --resource-group orb-game-rg-eastus2 --name orb-game --src-path deploy.zip --type zip\n\n# Backend only\ndocker build --platform linux/amd64 -f backend/backend-Dockerfile -t orbgameregistry.azurecr.io/orb-game-backend:latest .\naz acr login --name orbgameregistry\ndocker push orbgameregistry.azurecr.io/orb-game-backend:latest\naz containerapp update --name orb-game-backend-eastus2 --resource-group orb-game-rg-eastus2 --image orbgameregistry.azurecr.io/orb-game-backend:latest\n\n# Full deployment (both frontend and backend)\n./scripts/deploy-full.sh\n</code></pre>"},{"location":"developer/cursor-rules/#github-actions-deployment-production","title":"GitHub Actions Deployment (Production)","text":"<ul> <li>Automatic: Push to main branch triggers automatic deployment</li> <li>Frontend: Deploys on any file change</li> <li>Backend: Deploys only on backend-related changes (backend/, scripts/, .github/workflows/deploy-backend.yml)</li> <li>Manual: Use GitHub Actions \"workflow_dispatch\" for manual deployment</li> </ul>"},{"location":"developer/cursor-rules/#deployment-verification","title":"Deployment Verification","text":"<pre><code># Test frontend deployment\ncurl -s \"https://orbgame.us\" | head -5\n\n# Test backend deployment\ncurl -s \"https://api.orbgame.us/api/orb/positive-news/Technology?count=1&amp;epoch=Modern&amp;language=en&amp;storyType=historical-figure\" | head -5\n\n# Check deployment status\naz webapp show --name orb-game --resource-group orb-game-rg-eastus2 --query \"state\"\naz containerapp show --name orb-game-backend-eastus2 --resource-group orb-game-rg-eastus2 --query \"properties.provisioningState\"\n\n# Verify historical figure stories are working\ncurl -s \"https://api.orbgame.us/api/orb/positive-news/Technology?count=1&amp;epoch=Modern&amp;language=en&amp;storyType=historical-figure\" | jq '.[0].headline'\n</code></pre>"},{"location":"developer/cursor-rules/#docker-platform-requirements","title":"Docker Platform Requirements","text":"<ul> <li>Backend Images: Must be built for <code>linux/amd64</code> platform</li> <li>Build Command: <code>docker build --platform linux/amd64 -f backend-Dockerfile -t orbgameregistry.azurecr.io/orb-game-backend:latest .</code></li> <li>Azure Container Apps: Require amd64 images for proper deployment</li> <li>Local Development: Use <code>--platform linux/amd64</code> flag for Docker builds</li> </ul>"},{"location":"developer/cursor-rules/#deployment-scripts","title":"Deployment Scripts","text":"<ul> <li>Full Deployment: <code>scripts/deploy-full.sh</code></li> <li>Frontend Only: <code>scripts/deploy-azure.sh</code></li> <li>Backend Only: <code>scripts/setup-backend.sh</code></li> <li>Environment Setup: <code>scripts/set-azure-build-env.sh</code></li> <li>Quick Deploy: <code>scripts/deploy-manual.sh</code> - Fast manual deployment</li> </ul>"},{"location":"developer/cursor-rules/#current-deployment-status-december-2024","title":"Current Deployment Status (December 2024)","text":"<ul> <li>Frontend: \u2705 Live at https://orbgame.us (Azure Web App)</li> <li>Backend: \u2705 Live at https://api.orbgame.us (Azure Container Apps)</li> <li>Database: \u2705 Azure Cosmos DB for MongoDB with 239+ historical figure stories</li> <li>GitHub Actions: \u2705 Automatic deployment on push to main branch</li> <li>Historical Figures: \u2705 Working with proper storyType parameter support</li> <li>Learn More Feature: \u2705 Enhanced to provide detailed historical figure information</li> </ul>"},{"location":"developer/cursor-rules/#environment-variables","title":"Environment Variables","text":"<pre><code># Required for backend\nMONGO_URI=your-azure-cosmos-db-connection-string\nAZURE_OPENAI_ENDPOINT=https://aimcs-foundry.cognitiveservices.azure.com/\nAZURE_OPENAI_API_KEY=your-azure-openai-api-key\nAZURE_OPENAI_DEPLOYMENT=o4-mini\nAZURE_OPENAI_TTS_DEPLOYMENT=gpt-4o-mini-tts\nPERPLEXITY_API_KEY=your-perplexity-api-key\n</code></pre>"},{"location":"developer/cursor-rules/#testing-quality-assurance","title":"\ud83e\uddea Testing &amp; Quality Assurance","text":""},{"location":"developer/cursor-rules/#test-scripts","title":"Test Scripts","text":"<ul> <li>AI Models: <code>scripts/test-ai-models.js</code></li> <li>Backend: <code>scripts/test-new-backend.js</code></li> <li>Cache System: <code>scripts/test-story-cache-comprehensive.js</code></li> <li>Performance: <code>scripts/performance-comparison.js</code></li> <li>Memory: <code>scripts/test-memory.sh</code></li> </ul>"},{"location":"developer/cursor-rules/#testing-guidelines","title":"Testing Guidelines","text":"<ul> <li>Run comprehensive test suite before deployment</li> <li>Verify all AI models are working: <code>node scripts/test-ai-models.js</code></li> <li>Test story generation: <code>node scripts/test-fixed-story-generation.js</code></li> <li>Debug API issues: <code>node scripts/debug-api-response.js</code></li> <li>Check cache performance metrics</li> <li>Validate multi-language support</li> <li>Test Azure Key Vault integration</li> </ul>"},{"location":"developer/cursor-rules/#security-authentication","title":"\ud83d\udd12 Security &amp; Authentication","text":""},{"location":"developer/cursor-rules/#azure-key-vault-integration","title":"Azure Key Vault Integration","text":"<ul> <li>RBAC: Role-Based Access Control (not access policies)</li> <li>Managed Identity: Container app uses managed identity</li> <li>Secrets: All API keys stored securely</li> <li>Permissions: \"Key Vault Secrets User\" role required</li> </ul>"},{"location":"developer/cursor-rules/#security-best-practices","title":"Security Best Practices","text":"<ul> <li>Never commit API keys to source code</li> <li>Use environment variables for configuration</li> <li>Implement proper CORS headers</li> <li>Validate all user inputs</li> <li>Use HTTPS for all communications</li> </ul>"},{"location":"developer/cursor-rules/#performance-optimization","title":"\ud83d\udcca Performance Optimization","text":""},{"location":"developer/cursor-rules/#caching-strategy","title":"Caching Strategy","text":"<ul> <li>Database Caching: MongoDB-based story and audio caching</li> <li>Performance: 88.2% faster response times for cached requests</li> <li>Cost Savings: 29.0% reduction in token usage</li> <li>Cache Hit Rate: 50% in test scenarios</li> </ul>"},{"location":"developer/cursor-rules/#optimization-guidelines","title":"Optimization Guidelines","text":"<ul> <li>Preload stories for selected epochs</li> <li>Cache TTS audio as base64 in database</li> <li>Use efficient Three.js rendering</li> <li>Implement proper error handling</li> <li>Monitor Azure resource usage</li> </ul>"},{"location":"developer/cursor-rules/#gaming-features","title":"\ud83c\udfae Gaming Features","text":""},{"location":"developer/cursor-rules/#core-gameplay","title":"Core Gameplay","text":"<ul> <li>3D Environment: Milky Way background with 5,000 animated stars</li> <li>Orb Interaction: Drag orbs to center for story discovery</li> <li>Epoch Selection: Time travel through different eras</li> <li>Category Exploration: 8 different news categories</li> <li>Audio Integration: Text-to-speech for immersive experience</li> </ul>"},{"location":"developer/cursor-rules/#user-experience","title":"User Experience","text":"<ul> <li>Responsive Design: Works on desktop and mobile</li> <li>Touch Controls: Swipe gestures for mobile interaction</li> <li>Visual Feedback: Animations and glow effects</li> <li>Accessibility: Audio controls and keyboard navigation</li> </ul>"},{"location":"developer/cursor-rules/#development-workflow","title":"\ud83d\udd27 Development Workflow","text":""},{"location":"developer/cursor-rules/#local-development","title":"Local Development","text":"<pre><code># Frontend\nnpm install --legacy-peer-deps\nnpm run dev\n\n# Backend\ncd backend\nnpm install\nnode backend-server.js\n</code></pre>"},{"location":"developer/cursor-rules/#github-actions-package-management-workflow","title":"GitHub Actions &amp; Package Management Workflow","text":"<ul> <li>CRITICAL WORKFLOW: When modifying dependencies, follow this exact sequence:</li> <li>Edit package.json with new dependencies</li> <li>Run <code>npm install</code> to update package-lock.json</li> <li>Verify with <code>npm list</code> that all packages are installed</li> <li>Test build locally: <code>npm run build</code></li> <li>Commit BOTH package.json AND package-lock.json together</li> <li> <p>Push to trigger GitHub Actions</p> </li> <li> <p>GitHub Actions Package Sync Issues:</p> </li> <li>Error: \"Missing: @types/react@19.1.9 from lock file\"</li> <li>Cause: package.json and package-lock.json are out of sync</li> <li>Prevention: Always run <code>npm install</code> after package.json changes</li> <li>Verification: Use <code>npm list</code> to check installed packages</li> <li> <p>Solution: Run <code>npm install</code> locally, commit both files, push</p> </li> <li> <p>Package Management Best Practices:</p> </li> <li>Never commit package.json without package-lock.json</li> <li>Always run <code>npm install</code> after dependency changes</li> <li>Use exact versions for critical dependencies</li> <li>Test locally before pushing to catch sync issues</li> <li>Verify with <code>npm ci</code> locally to simulate GitHub Actions environment</li> </ul>"},{"location":"developer/cursor-rules/#deployment-process","title":"Deployment Process","text":""},{"location":"developer/cursor-rules/#automated-deployment-recommended","title":"Automated Deployment (Recommended)","text":"<ol> <li>GitHub Actions: Push to main branch automatically triggers deployment</li> <li>Frontend: Any file change triggers frontend deployment</li> <li>Backend: Only backend-related changes trigger backend deployment</li> <li>Full: Complete CI/CD pipeline with testing and verification</li> </ol>"},{"location":"developer/cursor-rules/#manual-deployment-development","title":"Manual Deployment (Development)","text":"<ol> <li>Update Azure Key Vault secrets if needed</li> <li>Build and test locally: <code>npm run build &amp;&amp; npm test</code></li> <li>Run deployment scripts:</li> <li>Frontend only: <code>./scripts/deploy-azure.sh</code></li> <li>Backend only: <code>./scripts/build-backend.sh</code></li> <li>Full deployment: <code>./scripts/deploy-full.sh</code></li> <li>Verify Azure resources and test production endpoints</li> <li>Monitor deployment logs and health checks</li> </ol>"},{"location":"developer/cursor-rules/#seamless-automation-features","title":"Seamless Automation Features","text":"<ul> <li>Automatic Testing: GitHub Actions run tests before deployment</li> <li>Health Checks: Automatic verification of deployed services</li> <li>Rollback Capability: Previous versions can be restored if needed</li> <li>Environment Parity: Local, staging, and production environments are consistent</li> <li>Secret Management: Azure Key Vault integration for secure credential management</li> </ul>"},{"location":"developer/cursor-rules/#story-prepopulation-process","title":"Story Prepopulation Process","text":"<ol> <li>Ensure Azure Key Vault credentials are set</li> <li>Check existing stories: <code>node scripts/check-existing-stories.js</code></li> <li>Run missing stories generation: <code>node scripts/generate-missing-stories.js</code> (token efficient)</li> <li>Or run full prepopulation: <code>./scripts/run-prepopulation.sh</code> for interactive confirmation</li> <li>Monitor progress and error statistics</li> <li>Verify stories in MongoDB using <code>scripts/check-database-stories.js</code></li> <li>Test story loading in the game interface</li> </ol>"},{"location":"developer/cursor-rules/#git-workflow","title":"Git Workflow","text":"<ul> <li>Use descriptive commit messages</li> <li>Test changes before committing</li> <li>Update documentation for new features</li> <li>Follow semantic versioning</li> <li>CRITICAL: Always commit package.json and package-lock.json together</li> </ul>"},{"location":"developer/cursor-rules/#deployment-verification-monitoring","title":"Deployment Verification &amp; Monitoring","text":"<ul> <li>Health Checks: Verify both frontend and backend are responding</li> <li>Performance Monitoring: Monitor Azure resource usage and response times</li> <li>Error Tracking: Monitor application logs for errors and issues</li> <li>Automated Testing: Run comprehensive test suite before deployment</li> <li>Rollback Procedures: Keep previous versions available for quick rollback</li> <li>Package Sync Verification: Ensure package.json and package-lock.json are in sync before deployment </li> </ul>"},{"location":"developer/cursor-rules/#critical-notes","title":"\ud83d\udea8 Critical Notes","text":""},{"location":"developer/cursor-rules/#important-reminders","title":"Important Reminders","text":"<ul> <li>O4-Mini Model: Use <code>max_completion_tokens</code>, not <code>max_tokens</code></li> <li>Temperature Parameter: Not supported for O4-Mini (use default 1)</li> <li>Authorization Header: Use <code>Authorization: Bearer</code> for Azure OpenAI</li> <li>TTS Voice: Use <code>alloy</code> for both English and Spanish (avoid <code>jorge</code>)</li> <li>Token Limits: Use 2000 tokens for complete story generation</li> <li>Database Migration: All data migrated from <code>aimcs</code> to <code>orbgame</code></li> <li>Registry Name: Use <code>orbgame</code> registry, not <code>aimcsregistry</code></li> <li>Docker Platform: Always build with <code>--platform linux/amd64</code> for Azure Container Apps</li> <li>Azure OpenAI Endpoint: Use <code>https://aimcs-foundry.cognitiveservices.azure.com/</code></li> <li>API Version: Use <code>2024-12-01-preview</code> for o4-mini model</li> </ul>"},{"location":"developer/cursor-rules/#package-management-github-actions-sync-issues","title":"Package Management &amp; GitHub Actions Sync Issues","text":"<ul> <li>CRITICAL: Always run <code>npm install</code> after modifying package.json</li> <li>CRITICAL: Always commit both package.json AND package-lock.json together</li> <li>CRITICAL: Never commit package.json without running npm install first</li> <li>Common Error: \"Missing: @types/react@19.1.9 from lock file\" - indicates package.json and package-lock.json are out of sync</li> <li>Solution: Run <code>npm install</code> locally, then commit both files together</li> <li>Verification: Use <code>npm list</code> to check installed packages match package.json</li> <li>Prevention: Test build locally with <code>npm run build</code> before pushing</li> <li>GitHub Actions: Uses <code>npm ci</code> which requires exact package-lock.json match</li> </ul>"},{"location":"developer/cursor-rules/#troubleshooting-package-sync-issues","title":"Troubleshooting Package Sync Issues","text":""},{"location":"developer/cursor-rules/#github-actions-failure-missing-dependencies-from-lock-file","title":"GitHub Actions Failure: \"Missing dependencies from lock file\"","text":"<p>Error Message: <code>Missing: @types/react@19.1.9 from lock file</code></p> <p>Root Cause: package.json and package-lock.json are out of sync</p> <p>Immediate Fix: <pre><code># 1. Run npm install to sync package-lock.json\nnpm install\n\n# 2. Verify packages are installed correctly\nnpm list\n\n# 3. Test build locally\nnpm run build\n\n# 4. Commit both files together\ngit add package.json package-lock.json\ngit commit -m \"fix: sync package.json and package-lock.json\"\ngit push\n</code></pre></p> <p>Prevention Checklist: - [ ] Always run <code>npm install</code> after package.json changes - [ ] Verify with <code>npm list</code> that all packages are installed - [ ] Test build locally before committing - [ ] Commit both package.json AND package-lock.json together - [ ] Never commit package.json without running npm install first</p> <p>Verification Commands: <pre><code># Check if packages are in sync\nnpm list\n\n# Test build process\nnpm run build\n\n# Simulate GitHub Actions environment\nnpm ci\n</code></pre></p>"},{"location":"developer/cursor-rules/#common-issues","title":"Common Issues","text":"<ul> <li>Key Vault RBAC permissions for container app</li> <li>CORS configuration for cross-origin requests</li> <li>TTS audio generation for different languages</li> <li>Cache invalidation and story freshness</li> <li>Azure Container App scaling configuration</li> <li>Docker platform mismatch (must use <code>linux/amd64</code> for Azure Container Apps)</li> <li>Container App deployment failures due to wrong platform architecture</li> <li>API Parameter Issues: Use <code>max_completion_tokens</code> not <code>max_tokens</code> for o4-mini</li> <li>TTS Voice Issues: Use <code>alloy</code> voice (avoid <code>jorge</code> - not supported)</li> <li>Empty API Responses: Check token limits and parameter names</li> <li>JSON Parse Errors: Implement JSON fix attempts and empty content checks</li> <li>Package Lock Sync: Missing dependencies in package-lock.json cause GitHub Actions failures </li> </ul>"},{"location":"developer/cursor-rules/#github-pages-wiki-system","title":"\ud83d\udcda GitHub Pages Wiki System","text":""},{"location":"developer/cursor-rules/#complete-setup-maintenance","title":"Complete Setup &amp; Maintenance","text":"<ul> <li>Main Guide: <code>GITHUB_PAGES_COMPLETE_SETUP.md</code> - Comprehensive setup and maintenance guide</li> <li>Status: Currently returning 404 - GitHub Pages needs manual configuration</li> <li>Live URL: https://wiki.orbgame.us (after configuration)</li> <li>DNS: Configured (wiki.orbgame.us \u2192 zimaxnet.github.io)</li> <li>Content: 3.4MB of documentation ready</li> </ul>"},{"location":"developer/cursor-rules/#core-setup-files","title":"Core Setup Files","text":"<ul> <li>Complete Setup Guide: <code>GITHUB_PAGES_COMPLETE_SETUP.md</code> - All setup information in one place</li> <li>Status Verification: <code>scripts/verify-wiki-status.sh</code> - Comprehensive status checking</li> <li>Quick Updates: <code>scripts/quick-wiki-update.sh</code> - Manual wiki updates</li> <li>README Sync: <code>scripts/sync-readme-to-wiki.sh</code> - Sync README/.cursorrules to wiki</li> <li>Configuration Guide: <code>scripts/configure-github-pages-step-by-step.sh</code> - Step-by-step setup</li> </ul>"},{"location":"developer/cursor-rules/#github-pages-configuration-required","title":"GitHub Pages Configuration Required","text":"<p>Go to: https://github.com/zimaxnet/orb-game/settings/pages Configure: - Source: Deploy from a branch - Branch: <code>gh-pages</code> - Folder: <code>/ (root)</code> - Custom domain: <code>wiki.orbgame.us</code> - Enforce HTTPS: \u2713</p>"},{"location":"developer/cursor-rules/#update-process-after-configuration","title":"Update Process (After Configuration)","text":"<p>Automatic Updates: 1. Edit files in <code>docs/</code> directory 2. Commit and push to main branch 3. GitHub Actions automatically builds and deploys 4. Wiki updates within 5-10 minutes</p> <p>Manual Updates: <pre><code># Quick wiki update\n./scripts/quick-wiki-update.sh\n\n# Sync from README/.cursorrules\n./scripts/sync-readme-to-wiki.sh\n</code></pre></p> <p>Sync README/.cursorrules to Wiki: <pre><code># Extract important content from README and .cursorrules\n./scripts/sync-readme-to-wiki.sh\n\n# Creates:\n# - docs/getting-started/project-overview.md\n# - docs/developer/deployment-patterns.md\n# - docs/developer/development-guidelines.md\n# - docs/developer/critical-notes.md\n# - docs/developer/cursor-rules.md\n</code></pre></p>"},{"location":"developer/cursor-rules/#monitoring-maintenance","title":"Monitoring &amp; Maintenance","text":"<p>Regular Checks: <pre><code># Test wiki accessibility\ncurl -I https://wiki.orbgame.us\n\n# Check deployment status\ngit log --oneline gh-pages -3\n\n# Run comprehensive verification\n./scripts/verify-wiki-status.sh\n</code></pre></p> <p>Update Workflow: 1. Update README.md with new features/bug fixes 2. Update .cursorrules with new development rules 3. Run sync script: <code>./scripts/sync-readme-to-wiki.sh</code> 4. Commit and push to trigger auto-deployment 5. Verify updates at https://wiki.orbgame.us</p>"},{"location":"developer/cursor-rules/#troubleshooting","title":"Troubleshooting","text":"<p>If GitHub Pages Shows 404: 1. Check GitHub Pages is configured correctly 2. Verify gh-pages branch exists and has content 3. Wait 5-10 minutes for processing 4. Check GitHub Actions for build errors</p> <p>If Updates Don't Work: 1. Ensure GitHub Pages is configured 2. Check GitHub Actions workflow is running 3. Verify changes are in <code>docs/</code> directory 4. Wait for deployment completion</p> <p>If DNS Issues: 1. Verify Azure DNS CNAME record exists 2. Wait for DNS propagation (up to 48 hours) 3. Check custom domain in GitHub Pages settings</p>"},{"location":"developer/cursor-rules/#success-checklist","title":"Success Checklist","text":"<ul> <li> GitHub Pages configured in repository settings</li> <li> Custom domain <code>wiki.orbgame.us</code> added</li> <li> \"Enforce HTTPS\" enabled</li> <li> gh-pages branch exists with content</li> <li> GitHub Actions workflow is running</li> <li> Site accessible at http://wiki.orbgame.us</li> <li> Site accessible at https://wiki.orbgame.us (after SSL)</li> <li> Documentation loads correctly</li> <li> Navigation and search work</li> <li> Automatic updates working</li> </ul>"},{"location":"developer/cursor-rules/#quick-links","title":"Quick Links","text":"<ul> <li>GitHub Pages Settings: https://github.com/zimaxnet/orb-game/settings/pages</li> <li>GitHub Actions: https://github.com/zimaxnet/orb-game/actions</li> <li>Live Wiki: https://wiki.orbgame.us</li> <li>Repository: https://github.com/zimaxnet/orb-game</li> </ul>"},{"location":"getting-started/introduction/","title":"\ud83c\udfae Introduction to Orb Game","text":""},{"location":"getting-started/introduction/#what-is-orb-game","title":"What is Orb Game?","text":"<p>Orb Game is an advanced AI-powered interactive gaming platform that combines time travel, positive news discovery, and multimodal AI technology. Players explore different historical epochs through an immersive 3D environment, discovering stories about influential historical figures and their achievements.</p>"},{"location":"getting-started/introduction/#key-features","title":"\ud83c\udf1f Key Features","text":""},{"location":"getting-started/introduction/#interactive-3d-experience","title":"\ud83c\udfaf Interactive 3D Experience","text":"<ul> <li>Milky Way Background: 5,000 animated stars create an immersive space environment</li> <li>Orbiting Satellites: 8 categories represented as interactive 3D orbs</li> <li>Drag &amp; Drop: Intuitive controls for exploring different time periods</li> <li>Responsive Design: Works seamlessly on desktop and mobile devices</li> </ul>"},{"location":"getting-started/introduction/#time-travel-through-history","title":"\ud83d\udd70\ufe0f Time Travel Through History","text":"<ul> <li>5 Historical Epochs: Ancient, Medieval, Industrial, Modern, Future</li> <li>8 Categories: Technology, Science, Art, Nature, Sports, Music, Space, Innovation</li> <li>240+ Stories: Pre-populated historical figure narratives</li> <li>Bilingual Support: English and Spanish with cultural sensitivity</li> </ul>"},{"location":"getting-started/introduction/#ai-powered-content","title":"\ud83e\udd16 AI-Powered Content","text":"<ul> <li>O4-Mini Model: Advanced AI for story generation</li> <li>Text-to-Speech: Immersive audio narration</li> <li>Dynamic Content: Real-time story generation and caching</li> <li>Historical Accuracy: Carefully researched historical figures</li> </ul>"},{"location":"getting-started/introduction/#visual-excellence","title":"\ud83c\udfa8 Visual Excellence","text":"<ul> <li>Three.js Graphics: High-performance 3D rendering</li> <li>Smooth Animations: Fluid transitions and interactions</li> <li>Modern UI: Clean, intuitive interface design</li> <li>Accessibility: Audio controls and keyboard navigation</li> </ul>"},{"location":"getting-started/introduction/#technical-architecture","title":"\ud83c\udfd7\ufe0f Technical Architecture","text":""},{"location":"getting-started/introduction/#frontend-stack","title":"Frontend Stack","text":"<ul> <li>React 19.x with modern hooks and context</li> <li>Vite for fast development and optimized builds</li> <li>Three.js with @react-three/fiber for 3D graphics</li> <li>CSS Modules for component-specific styling</li> </ul>"},{"location":"getting-started/introduction/#backend-stack","title":"Backend Stack","text":"<ul> <li>Node.js with Express server</li> <li>Azure OpenAI integration (o4-mini model)</li> <li>Azure Cosmos DB for MongoDB storage</li> <li>Azure Key Vault for secure credential management</li> </ul>"},{"location":"getting-started/introduction/#deployment-infrastructure","title":"Deployment Infrastructure","text":"<ul> <li>Azure Web App for frontend hosting</li> <li>Azure Container Apps for backend services</li> <li>Azure Container Registry for Docker images</li> <li>GitHub Actions for automated CI/CD</li> </ul>"},{"location":"getting-started/introduction/#how-it-works","title":"\ud83c\udfae How It Works","text":""},{"location":"getting-started/introduction/#1-orb-interaction","title":"1. Orb Interaction","text":"<p>Players drag orbs (representing different categories) to the center of the screen to activate story discovery.</p>"},{"location":"getting-started/introduction/#2-epoch-selection","title":"2. Epoch Selection","text":"<p>Choose from 5 historical periods to explore different eras of human achievement.</p>"},{"location":"getting-started/introduction/#3-story-generation","title":"3. Story Generation","text":"<p>AI generates engaging narratives about historical figures and their accomplishments.</p>"},{"location":"getting-started/introduction/#4-audio-experience","title":"4. Audio Experience","text":"<p>Text-to-speech provides immersive narration in both English and Spanish.</p>"},{"location":"getting-started/introduction/#5-content-caching","title":"5. Content Caching","text":"<p>Stories are cached for instant loading and optimal performance.</p>"},{"location":"getting-started/introduction/#current-status","title":"\ud83d\udcca Current Status","text":"<ul> <li>\u2705 Live Game: https://orbgame.us</li> <li>\u2705 API Endpoint: https://api.orbgame.us</li> <li>\u2705 240+ Stories: Historical figures across all categories and epochs</li> <li>\u2705 Bilingual Support: English and Spanish content</li> <li>\u2705 Automated Deployment: CI/CD pipeline with GitHub Actions</li> <li>\u2705 Performance Optimized: 88.2% faster response times with caching</li> </ul>"},{"location":"getting-started/introduction/#getting-started","title":"\ud83d\ude80 Getting Started","text":""},{"location":"getting-started/introduction/#for-players","title":"For Players","text":"<ol> <li>Visit https://orbgame.us</li> <li>Explore different categories by dragging orbs to the center</li> <li>Select historical epochs to travel through time</li> <li>Enjoy immersive stories with audio narration</li> </ol>"},{"location":"getting-started/introduction/#for-developers","title":"For Developers","text":"<ol> <li>Clone the repository: <code>git clone https://github.com/zimaxnet/orb-game</code></li> <li>Install dependencies: <code>npm install</code></li> <li>Start development server: <code>npm run dev</code></li> <li>Read the Developer Documentation</li> </ol>"},{"location":"getting-started/introduction/#for-contributors","title":"For Contributors","text":"<ol> <li>Fork the repository</li> <li>Create a feature branch</li> <li>Make your changes</li> <li>Submit a pull request</li> <li>See Contributing Guidelines</li> </ol>"},{"location":"getting-started/introduction/#mission","title":"\ud83c\udfaf Mission","text":"<p>Orb Game aims to make history engaging and accessible through cutting-edge AI technology. By combining interactive 3D graphics, advanced AI storytelling, and carefully researched historical content, we create an educational experience that inspires curiosity and learning.</p>"},{"location":"getting-started/introduction/#vision","title":"\ud83c\udf1f Vision","text":"<p>To become the premier platform for AI-powered historical education, connecting people with the remarkable achievements of humanity's greatest minds across all eras and disciplines.</p> <p>Ready to explore? Start playing now! </p>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":""},{"location":"getting-started/quick-start/#getting-started-with-orb-game","title":"\ud83d\ude80 Getting Started with Orb Game","text":""},{"location":"getting-started/quick-start/#for-players","title":"For Players","text":"<ol> <li>Visit https://orbgame.us</li> <li>Drag orbs to the center to explore categories</li> <li>Select historical epochs to travel through time</li> <li>Enjoy immersive stories with audio narration</li> </ol>"},{"location":"getting-started/quick-start/#for-developers","title":"For Developers","text":"<ol> <li>Clone the repository</li> <li>Install dependencies: <code>npm install</code></li> <li>Start development: <code>npm run dev</code></li> <li>Read the Architecture Guide</li> </ol> <p>More detailed guides coming soon...</p>"},{"location":"getting-started/readme-sync/","title":"README Sync","text":"<p>This page contains content automatically synced from the main README.md file.</p>"},{"location":"getting-started/readme-sync/#last-sync","title":"Last Sync","text":"<p>Last sync: Fri Aug  1 11:16:13 MST 2025</p>"},{"location":"getting-started/readme-sync/#synced-sections","title":"Synced Sections","text":"<ul> <li>Project Overview \u2192 Project Overview</li> <li>Deployment Patterns \u2192 Deployment Patterns</li> <li>Development Guidelines \u2192 Development Guidelines</li> <li>Critical Notes \u2192 Critical Notes</li> <li>Cursor Rules \u2192 Cursor Rules</li> </ul>"}]}